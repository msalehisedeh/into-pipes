import * as tslib_1 from "tslib";
import { Component, EventEmitter } from '@angular/core';
var VideoComponent = /** @class */ (function () {
    function VideoComponent() {
        this.hasControls = true;
        this.hoverPlay = false;
        this.onIntoComponentChange = new EventEmitter();
    }
    VideoComponent.prototype.transform = function (source, data, args) {
        this.source = source;
        this.width = (args && args.length) ? args[0] : "";
        this.height = (args && args.length > 1) ? args[1] : "";
        this.alt = (args && args.length > 2) ? args[2] : "";
        this.hasControls = (args && args.length > 3) ? (args[3] === 'true') : true;
        this.hoverPlay = (args && args.length > 4) ? (args[4] === 'true') : false;
        if ((typeof source === "string") || !(source instanceof Array)) {
            if (!this.alt || !this.alt.length) {
                var q = source.indexOf("?");
                var t = q < 0 ? source : source.substring(0, q);
                var d = t.lastIndexOf("/");
                this.alt = d < 0 ? t : t.substring(d + 1);
            }
        }
    };
    VideoComponent.prototype.updateControls = function (event) {
        if (this.hasControls) {
            event.target.setAttribute('controls', 'true');
        }
        if (this.hoverPlay) {
            event.target.play();
        }
    };
    VideoComponent.prototype.resetControls = function (event) {
        if (this.hoverPlay && this.isPlaying(event.target)) {
            event.target.pause();
        }
    };
    VideoComponent.prototype.isPlaying = function (video) {
        return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);
    };
    VideoComponent.prototype.keyup = function (event) {
        var code = event.which;
        if (code === 13) {
            if (this.isPlaying(event.target)) {
                event.target.pause();
            }
            else {
                event.target.play();
            }
        }
    };
    VideoComponent.prototype.change = function (event) {
        this.onIntoComponentChange.emit({
            id: this.id,
            name: this.name,
            value: this.source,
            type: event.type,
            item: {
                autoplay: event.target.autoplay,
                controls: event.target.controls,
                duration: event.target.duration,
                ended: event.target.ended,
                error: event.target.error,
                paused: event.target.paused,
                muted: event.target.muted,
                currentTime: event.target.currentTime,
                volume: event.target.volume
            }
        });
    };
    VideoComponent = tslib_1.__decorate([
        Component({
            selector: 'video-component',
            template: "\n    <video tabindex=\"0\"\n        (focus)=\"updateControls($event)\"\n        (mouseenter)=\"updateControls($event)\"\n        (mouseleave)=\"resetControls($event)\"\n        (keyup)=\"keyup($event)\"\n        (play)=\"change($event)\"\n        (ended)=\"change($event)\"\n        (pause)=\"change($event)\"\n        (seeked)=\"change($event)\"\n        (error)=\"change($event)\"\n        (fullscreenchange)=\"change($event)\"\n        [src]=\"source\" \n        [style.width]=\"width\" \n        [style.height]=\"height\"\n        [title]=\"alt\"></video>\n    ",
            styles: ["\n    :host {display:table;float:left;min-height: 23px}\n    "]
        })
    ], VideoComponent);
    return VideoComponent;
}());
export { VideoComponent };
//# sourceMappingURL=data:application/json;base64,